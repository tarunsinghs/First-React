{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/serach_box/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","map","Search","handleChange","type","placeholder","onChange","App","HandleChange","e","setState","searchfield","target","value","state","fetch","then","response","json","user","this","filteredmonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEaA,EAAO,SAAAC,GAAK,OACzB,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,cCJTC,EAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAU,YAAf,SAECD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPlBK,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAF,OAClB,8BACA,uBAAOC,KAAK,SAASC,YAAY,iBAAiBC,SAAUH,OCoCjDI,G,wDAhCb,aAAc,IAAD,8BACX,gBASJC,aAAc,SAAAC,GACZ,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SATpC,EAAKC,MAAQ,CACXlB,QAAU,GACVe,YAAa,IAJJ,E,qDAOf,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACd,QAAUuB,S,oBAK5H,WAEE,MAA6BC,KAAKN,MAA3BlB,EAAP,EAAOA,QAASe,EAAhB,EAAgBA,YACVU,EAAkBzB,EAAQ0B,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpG,OAEE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAQU,aAAciB,KAAKZ,eAC3B,cAAC,EAAD,CAAUZ,QAAUyB,W,GAzBRI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15bad1ef.chunk.js","sourcesContent":["import React from'react';\r\n\r\nexport const Card = props =>(\r\n<div className='card'>\r\n    <div className='container'> \r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}/set=set8$size=180x180`}/>\r\n    <h1>{props.monster.name}</h1>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n</div>\r\n);","import React from 'react';\r\nimport './card-lis.styles.css';\r\nimport {Card} from '../card/card.component';\r\nexport const Cardlist = props => (\r\n    \r\n    <div className='card-list'>\r\n        \r\n    {props.monster.map(monster => (\r\n            <Card key={monster.id} monster={monster}></Card>\r\n        ))}\r\n\r\n    </div>\r\n) ;\r\n","import React from 'react';\r\nexport const Search = ({handleChange}) =>(\r\n    <div >\r\n    <input type='search' placeholder='Search Monster' onChange={handleChange}/> \r\n    </div>\r\n)","import {Cardlist} from './components/card-list/card-list.component';\nimport { Search } from './components/serach_box/search';\nimport React, {Component} from 'react';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monster : [],\n      searchfield :\"\"\n  }\n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(user => this.setState({monster : user}));\n}\nHandleChange= e =>{\n  this.setState({searchfield : e.target.value})\n}\n  render(){\n\n    const {monster, searchfield}=this.state;\n    const filteredmonster = monster.filter(monster => monster.name.toLowerCase().includes(searchfield.toLowerCase()))\n  \n\n  return (\n    \n    <div className=\"App\">\n      <h1>Rolodex Project</h1>\n      <Search handleChange={this.HandleChange}/>\n      <Cardlist monster ={filteredmonster}/>\n          \n     \n    </div>\n  );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}